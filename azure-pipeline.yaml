name: WeatherForecast
trigger:
- master

variables:
  buildConfiguration: "Release"
  dotNetVersion: '6.0.x'
  resourceGroupName: 'rg-weather-forecast'
  location: 'westeurope'
  azureSubscription: 'azure-service-connection'  
  dotNetFramework: 'net6.0'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build
  jobs:

  - job: BuildApiApplication
    displayName: Build the API application
    steps:

    - task: UseDotNet@2
      displayName: Install .NET Framework version
      inputs:
        packageType: 'sdk'
        version: $(dotNetVersion)
        includePreviewVersions: true
        installationPath: $(Agent.ToolsDirectory)/dotnet  

    - task: DotNetCoreCLI@2
      displayName: Build API application
      inputs:
        command: 'build'
        projects: '**/WeatherForecastApi.csproj'
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration $(buildConfiguration) 

    - task: DotNetCoreCLI@2
      displayName: Create API application artifact
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True    

    - task: PublishBuildArtifacts@1
      displayName: Publish API application artifact
      inputs:
        PathtoPublish: "$(Build.ArtifactStagingDirectory)"
        ArtifactName: "api"
        publishLocation: Container   

  - job: BuildUiApplication
    displayName: Build the UI application
    steps:

    - task: UseDotNet@2
      displayName: Install .NET Framework version
      inputs:
        packageType: 'sdk'
        version: $(dotNetVersion)
        includePreviewVersions: true
        installationPath: $(Agent.ToolsDirectory)/dotnet  

    - task: DotNetCoreCLI@2
      displayName: Build UI application
      inputs:
        command: 'build'
        projects: '**/WeatherForecastApp.csproj'
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration $(buildConfiguration)  

    - task: DotNetCoreCLI@2
      displayName: Create UI application artifact
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True    

    - task: PublishBuildArtifacts@1
      displayName: Publish UI application artifact
      inputs:
        PathtoPublish: "$(Build.ArtifactStagingDirectory)"
        ArtifactName: "ui"
        publishLocation: Container      

  - job: BuildInfrastructure
    displayName: Build the infrastructure
    steps:

    - task: CopyFiles@2
      displayName: Create infrastructure artifact
      inputs:
        SourceFolder: 'infrastructure'
        Contents: |
          main.bicep
          parameters/dev.parameters.json
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: Publish infrastructure artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'infrastructure'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deployment
  jobs:

  - job: DeployInfrastructure
    displayName: Deploy infrastructure
    steps:

    - task: DownloadBuildArtifacts@0
      displayName: 'Download infrastructure artifact'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'infrastructure'
        downloadPath: '$(System.ArtifactsDirectory)' 

    - task: AzureCLI@2
      displayName: Deploy infrastructure
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az group create \
            --name $(resourceGroupName) \
            --location $(location)
          az deployment group create \
            --name $(Build.BuildNumber) \
            --resource-group $(resourceGroupName) \
            --template-file $(System.ArtifactsDirectory)/infrastructure/main.bicep \
            --parameters @$(System.ArtifactsDirectory)/infrastructure/parameters/dev.parameters.json \
          
  - job: DeployApiApplication
    dependsOn: DeployInfrastructure
    displayName: Deploy API application
    steps:

    - task: DownloadBuildArtifacts@0
      displayName: Download API application artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'api'
        downloadPath: '$(System.ArtifactsDirectory)'    

    - task: AzureWebApp@1
      displayName: Deploy API application
      inputs:
        appType: webApp
        azureSubscription: $(azureSubscription)
        appName: 'app-weatherforecastapi'
        package: "$(System.ArtifactsDirectory)/api/*.zip"

  - job: DeployUiApplication
    dependsOn: DeployInfrastructure
    displayName: Deploy UI application
    steps:

    - task: DownloadBuildArtifacts@0
      displayName: Download UI application artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'ui'
        downloadPath: '$(System.ArtifactsDirectory)'  

    - task: AzureWebApp@1
      displayName: Deploy UI application
      inputs:
        appType: webApp
        azureSubscription: $(azureSubscription)
        appName: 'app-weatherforecastui'
        package: "$(System.ArtifactsDirectory)/ui/*.zip"